<?xml version="1.0" encoding="UTF-8"?>
<definition>
    <editor-page>
        <id>OPSEditorPage</id>
        <element-type>av.proj.ide.ops.Protocol</element-type>
        <page-header-text>OPS Editor</page-header-text>
        <initial-selection>Protocol</initial-selection>
        <root-node>
            <node>
                <label>${ Name == null ? &quot;Protocol&quot; : Name }</label>
                <section>
                	<label>Protocol</label>
                    <description>Modify attributes of the Protocol element.</description>
                    <content>
                    	<actuator>
               				<action-id>Sapphire.Add</action-id>
               				<label>Add an operation</label>
               			</actuator>
	                    <section>
	                    	<label>Advanced Attributes</label>
	                    	<content>
	                    		<property-editor>Name</property-editor>
	                        	<property-editor>NumberOfOpCodes</property-editor>
	                        	<property-editor>DataValueWidth</property-editor>
	                        	<property-editor>DataValueGranularity</property-editor>
	                        	<property-editor>
                    				<property>ZeroLengthMessages</property>
                    				<style>Sapphire.PropertyEditor.CheckBoxGroup.Horizontal</style>
                    				<hint>
                    					<name>checkbox.layout</name>
                    					<value>leading.label</value>
                    				</hint>
                    			</property-editor>
	                        	<property-editor>MaxMessageValues</property-editor>
	                        	<property-editor>
                    				<property>VariableMessageLength</property>
                    				<style>Sapphire.PropertyEditor.CheckBoxGroup.Horizontal</style>
                    				<hint>
                    					<name>checkbox.layout</name>
                    					<value>leading.label</value>
                    				</hint>
                    			</property-editor>
                    			<property-editor>
                    				<property>DiverseDataSizes</property>
                    				<style>Sapphire.PropertyEditor.CheckBoxGroup.Horizontal</style>
                    				<hint>
                    					<name>checkbox.layout</name>
                    					<value>leading.label</value>
                    				</hint>
                    			</property-editor>
                    			<property-editor>
                    				<property>UnBounded</property>
                    				<style>Sapphire.PropertyEditor.CheckBoxGroup.Horizontal</style>
                    				<hint>
                    					<name>checkbox.layout</name>
                    					<value>leading.label</value>
                    				</hint>
                    			</property-editor>
	                    	</content>
	                    	<collapsible>true</collapsible>
	                    	<collapsed-initially>true</collapsed-initially>
	                    </section>
	            	</content>
                </section>
               	<node-factory>
               		<property>Operations</property>
               		<case>
               			<label>${ Name == null ? "&lt;operation&gt;" : Name }</label>
               			<section>
               				<label>Operation</label>
               				<description>Modify this operation.</description>
               				<content>
               					<actuator>
	               					<action-id>Sapphire.Add</action-id>
	               					<label>Add an Argument</label>
	               				</actuator>
               					<property-editor>Name</property-editor>
               				</content>
               			</section>
               			<node-factory>
               				<property>Arguments</property>
               				<case>
               					<label>${ Name == null ? "&lt;argument&gt;" : Name }</label>
               					<section>
               						<label>Argument</label>
               						<description>Modify attributes of this argument.</description>
               						<content>
               							<actuator>
	               							<action-id>Sapphire.Add</action-id>
	               							<label>Add a Member</label>
	               						</actuator>
               							<property-editor>Name</property-editor>
               							<property-editor>Type</property-editor>
               							<property-editor>
                                   			<visible-when>${ Type == &quot;string&quot; }</visible-when>
                                   			<property>StringLength</property>
                               			</property-editor>
                               			<property-editor>
                               				<visible-when>${ Type == &quot;enum&quot; }</visible-when>
                               				<property>Enums</property>
                               			</property-editor>
                                        <!--<property-editor>ArrayLength</property-editor>-->
               							<property-editor>SequenceLength</property-editor>
               							<property-editor>ArrayDimensions</property-editor>
               						</content>
               					</section>
               					<node-factory>
	            					<property>Members</property>
	            					<case>
	               						<label>${ Name == null ? "&lt;member&gt;" : Name }</label>
	               						<section>
	               							<label>Member</label>
	               							<description>Modify attributes of this member.</description>
	               							<content>
	               								<actuator>
					               					<action-id>Sapphire.Add</action-id>
					               					<label>Add a Member</label>
					               				</actuator>
	               								<property-editor>Name</property-editor>
	               								<property-editor>Type</property-editor>
	               								<property-editor>
	               									<property>Enums</property>
	               									<visible-when>${ Type == &quot;enum&quot; }</visible-when>
	               								</property-editor>
	               								<property-editor>
	               									<property>StringLength</property>
	               									<visible-when>${ Type == &quot;string&quot; }</visible-when>
	               								</property-editor>
	               								<property-editor>Default</property-editor>
	               								<property-editor>SequenceLength</property-editor>
	               								<property-editor>ArrayDimensions</property-editor>
	               							</content>
	               						</section>
	               						<node-factory>
	               							<property>Members</property>
	               							<case>
	               								<label>${ Name == null ? "&lt;member&gt;" : Name }</label>
				               					<section>
				               						<label>Member</label>
				               						<description>Modify attributes of this member.</description>
				               						<content>
				               							<property-editor>Name</property-editor>
				               							<property-editor>Type</property-editor>
				               							<property-editor>
				               								<property>Enums</property>
				               								<visible-when>${ Type == &quot;enum&quot; }</visible-when>
				               							</property-editor>
				               							<property-editor>
				               								<property>StringLength</property>
				               								<visible-when>${ Type == &quot;string&quot; }</visible-when>
				               							</property-editor>
				               							<property-editor>Default</property-editor>
				               							<property-editor>SequenceLength</property-editor>
				               							<property-editor>ArrayDimensions</property-editor>
				               						</content>
				               					</section>
	               							</case>
	               							<visible-when>${ Type == &quot;struct&quot; }</visible-when>
	               						</node-factory>
	               					</case>
	               					<visible-when>${ Type == &quot;struct&quot; }</visible-when>
	            				</node-factory>
               				</case>
               			</node-factory>
               		</case>
               	</node-factory>
            </node>
        </root-node>
    </editor-page>
</definition>